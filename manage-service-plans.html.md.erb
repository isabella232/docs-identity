---
title: Managing Service Plans
owner: Identity Service
---

This topic describes how Pivotal Cloud Foundry (PCF) Administrators manage Single Sign-On service plans.

Single Sign-On (SSO) is a multi-tenant service, which enables a deployment to host multiple tenants as service plans. 
Each service plan can have its own administrators, applications and users. 
This lets enterprises segregate access by using separate plans. For example, the following tenants might require separate plans:

* Business units and geographical locations

* Employees, consumers, and partners

* Development, staging, and production instances

You may also want to configure an SSO Service Plan as an OpenID Connect (OIDC) identity provider. 
For more information, see [Plan-to-Plan OIDC Integration Guide](./plan-to-plan/index.html).

## <a id='create-svc-plan'></a> Create or Edit Service Plans

Administrators can create new SSO service plans at any time from the SSO dashboard.
You can use the SSO dashboard to create and configure service plans at any time.

<p class="note"><strong>Note</strong>: You must create at least one plan for any service before your applications can use it.</p>

1. Log into the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` 
using your User Account and Authentication (UAA) administrator credentials. 
You can find these credentials in the Pivotal Application Service (PAS) tile in Ops Manager in the **Credentials** tab.

1. Click **New Plan** on the SSO dashboard to create a new SSO service plan.

	<%= image_tag 'images/managing_create_plan.png' %>

1. Enter a **Plan Name**.

1. Enter a **Description** to appear as a plan feature in the Services Marketplace.

1. Enter an **Auth Domain** to be the URL where users authenticate to access applications covered by the service plan.

1. Enter an **Instance Name** to appear on the login page and in other user-facing content, such as email communications.

1. Add **Plan Administrators**. These users can view the plan and manage identity providers.

1. Under **Organizations**, select specific organizations in your PCF deployment 
that can access your Single Sign-On service plan, or select **Enable for all Orgs**. <br><br>
	* If you select **Enable for all Orgs** the plan is available for use and displayed in the Services Marketplace for all developers in any organization. 
	This is only recommended for test plans to allow developers to experiment with the SSO service.<br><br>
	* If you do not select any organizations, the plan is not available for use and it is not displayed in the Services Marketplace.

1. Click **Create Plan**. Your new plan appears in the Services Marketplace in the organizations you selected. 
Users in those organizations view the plan either in Apps Manager or through the CF CLI by entering `cf marketplace` in a terminal window.

## <a id='delete-svc-plan'></a> Delete Service Plans

<p class='note'><strong>Note</strong>: This action cannot be undone. Deleting a Single Sign-On service plan 
removes from the SSO database all of the configurations, identity providers, users, 
application configurations and resources associated with the plan. 
It also deletes the associated service instances and service bindings. 
You must rebind any applications bound to the deleted service instances to new service instances.</p>

1. Log in to the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` 
using your UAA administrator credentials. You can find these credentials in your 
Pivotal Elastic Runtime tile in Ops Manager under the Credentials tab.

2. Select the name of the plan you want to delete, and click **Edit Plan** in the drop-down menu.

3. Select **Delete** at the bottom of the page.

4. In the popup that appears, click **Delete Plan** to confirm that you want to delete the plan.


## <a id='configure-token-policy'></a> Configure a Token Policy

The Single Sign-On service allows administrators to override the 
default expiry of access tokens (12 hours) and refresh tokens (30 days) by zone.

* **Access tokens** carry information about users and clients to servers that manage resources. 
Servers use access tokens to determine whether the client is authorized or not. Access tokens typically have a short-lived expiration time. 
* **Refresh tokens** carry information necessary to retrieve a new access token after an existing access token expires. 
Refresh tokens typically have a longer expiration time than access tokens.

To configure the token policy, do the following:

1. Log in to the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA administrator credentials. 
You can find these credentials in your Pivotal Application Service (PAS) tile in Ops Manager in the **Credentials** tab.

2. Select the name of the plan you want to configure a token policy for, and click **Configure** from the drop-down menu.

3. Enter the number of seconds for **Access Token Expiration** or select **Use System Default**.

4. Enter the number of seconds for **Refresh Token Expiration** or select **Use System Default**.

5. Click **Save**.

## <a id='plan-automation'></a> Plan Automation

System operators can create new SSO service plans using the SSO API. 
                     This allows system operators to automate creating, updating, and deleting SSO plans. Below are instructions on how to automate plan creation.

<!-- Do we need to cross-ref the API docs? -->

1. To login with UAAC as a `admin`, run the following command:

	```
	uaac target login.YOUR-SYSTEM-DOMAIN
	```
	
	Where `YOUR-SYSTEM-DOMAIN` is 

1. Run the following command: 

	```
	uaac token client get admin -s ADMIN-CLIENT-SECRET
	```
	
	Where `ADMIN-CLIENT-SECRET` is 

1. To create an automation client with UAAC, run the following command:  

	```
	uaac client add CLIENT-ID --secret CLIENT-SECRET --authorities "cloud_controller.admin,zones.write,scim.write,scim.read"
	```

	Where: 
	+ `CLIENT-ID` 
	+ `CLIENT-SECRET`

1. To obtain an acesss token, run the following command 

	```
	uaac token client get CLIENT_ID -s CLIENT_SECRET
	```
	
	Where: 
	+ `CLIENT-ID` 
	+ `CLIENT-SECRET
	
1. Run the following command:

	```
	uaac context  # returns the access token
	```

1. To create a new SSO plan, run the following command:

	```
	curl -X POST "https://sso-api.YOUR-SYSTEM-DOMAIN/v1/plans" \
	  -H "Authorization: Bearer $TOKEN" \
	  -H "Content-Type: application/json" \
	  -d '{
	    "name": "some-plan-name",
	    "description": "some-description",
	    "auth_domain": "some-auth-domain",
	    "instance_name": "some-instance-name"
	  }'
	```

	Where `YOUR-SYSTEM-DOMAIN` is 
	
1. To save the plan id in an environment variable for later use, run the following command. The example below uses `jq`.

	```
	PLAN_ID=$(curl -X POST "https://sso-api.YOUR-SYSTEM-DOMAIN/v1/plans" ... | jq -r '.id')
	```
	Where `YOUR-SYSTEM-DOMAIN` is 

To add plan administrators who can manage the plan and its identity providers, see [Manage Plan Administrators for SSO Plans](https://pivotal.github.io/sso-api-docs/#managing-plan-administrators-for-sso-plans).


To make the SSO plan available to developers in their org's CF Marketplace to add the corresponding Orgs for the plan, 
see [Managed CloudFoundry Organizations](https://pivotal.github.io/sso-api-docs/#managing-cloudfoundry-organizations-for-sso-plans).
 
For more information on how you can manage SSO plans via API, refer to the [SSO API documentation](https://pivotal.github.io/sso-api-docs).
