---
title: Configuring External Identity Providers
owner: Identity Service
---
This topic describes how <%= vars.platform %> admins configure a
<%= vars.product_name %> service plan to manage user access to <%= vars.platform %> apps using an
external identity provider.

## <a id='overview'></a> Overview

You can also configure a <%= vars.product_name %> service plan to use the internal user store to
manage user accounts.
For more information, see [Configuring Internal User Store](./configure-internal-us.html).

## <a id='config-ext-prov'></a> Add an External Identity Provider

See the following sets of instructions for how to configure <%= vars.product_name %> to use external identity providers that support SAML 2.0, OpenID Connect (OIDC), and LDAP.

### <a id='config-saml-prov'></a> Add a SAML Provider

Follow the steps below to add an external SAML identity provider:

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**.

1. Select `SAML 2.0` as the Identity Provider Type.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Enter the external identity provider metadata in one of the following ways:
    * Option 1: Provide the **Identity Provider Metadata URL** and click **Fetch Metadata**.
    * Option 2: Click **Upload Identity Provider Metadata** to upload XML metadata that you downloaded from your external identity provider.
<p class="note"><strong>Note:</strong> Uploading the Identity Provider Metadata as an XML file makes you unable to use the <strong>Fetch Metadata</strong> option to update your Identity Provider metadata later. If metadata changes on the Identity Provider side, you must manually re-upload them as an updated XML file.</p>

1. Under **Advanced Settings**, click **Attribute Mappings**.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider. These attributes can include email addresses, first names, last names, or external groups. They are sent to apps through OpenID tokens, along with any other stored user information issued by <%= vars.product_name %>.
	* Select a **User Scheme Attribute** from the dropdown.
	* Enter a **SAML Attribute Name** with the corresponding attribute from the incoming SAML assertion.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps through OpenID tokens issued by <%= vars.product_name %>.
	* Enter a **Custom Attribute Name**.
	* Enter a **SAML Attribute Name** with the corresponding attribute from the incoming SAML assertion.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint. Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

<p class="note"><strong>Note:</strong> To configure the service provider SAML settings, such as the signing of authentication requests and incoming assertions, click <strong>Configure SAML Service Provider</strong> on the Identity Providers page.
For more information, see <a href="#config-ext-settings">Configure Service Provider SAML Settings</a> above.
</p>

#### <a id='config-ext-settings'></a> Configure SAML Settings

For each plan, <%= vars.product_name %> enables you to configure SAML settings
when SAML is used for exchanging authentication and authorization data
between the identity provider and the service provider.
<%= vars.product_name %> provides the ability to sign authentication requests and require signed assertions from the external identity provider.

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **Configure SAML Service Provider**.

1. Configure the following settings:
	* **Perform signed authentication requests**: The service provider signs requests sent to the external identity provider.
	* **Require signed assertions**: The service provider requires that responses from the external identity provider are signed.

1. Click **Save** to save the configurations.

1. Click **Download Metadata**.

### <a id='config-ext-oidc'></a> Add an OIDC Provider

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**. This must match your origin key, although you can replace lowercase
 letters with capital letters and you can replace dashes with spaces.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Select `OpenID Connect` as the **Identity Provider Type**.

1. Enter the external OpenID Connect (OIDC) identity provider metadata in one of the following ways:
  - Option 1: Select the **Enable Discovery** checkbox, provide the **Discovery Endpoint URL**, **Relying Party OAuth Client ID**, and **Relying Party OAuth Client Secret** and click **Fetch Scopes**.
  - Option 2: Clear the **Enable Discovery** checkbox and provide the **Authorization Endpoint URL**, **Token Endpoint URL**, **Token Key** (URL), **Relying Party OAuth Client ID**, and **Relying Party OAuth Client Secret**. You can also optionally configure the **Issuer**, **User Info Endpoint URL**, or **Response Type** if required for your OIDC Identity Provider integration.

1. Select the applicable **Scopes** for the OIDC identity provider.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider. These attributes can include email addresses, first or last names, or external groups. They are sent to apps through OpenID tokens, along with any other stored user information issued by <%= vars.product_name %>.
  - Select a **User Scheme Attribute** from the dropdown.
  - Enter an **ID Token Attribute Name** with the corresponding attribute from the incoming OIDC ID token.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps through OpenID tokens issued by <%= vars.product_name %>.
  - Enter a **Custom Attribute Name**.
  - Enter an **ID Token Attribute Name** with the corresponding attribute from the incoming OIDC ID token.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint.  Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

### <a id='config-ext-ldap'></a> Add an LDAP Identity Provider

When integrating with an external identity provider for LDAP, authentication becomes chained. An authentication attempt with a user's credentials is first attempted against the internal user store before the external LDAP identity provider. To avoid username collision, do not bootstrap or create users in the UAA directly. You can only have one LDAP external identity provider per service plan.

<p class="note warning">
<strong>Warning:</strong> Pivotal recommends that you do not reuse LDAP service accounts across environments.
LDAP service accounts should not be subject to manual lockouts, such as lockouts that result from users using the same account.
LDAP service accounts should not be subject to automated deletions as disruption to these service accounts could prevent user logins.
</p>

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your PAS tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Select `LDAP` as the **Identity Provider Type**. You can only have one LDAP provider per Service Plan.

1. Enter the external LDAP identity provider configurations:
  1. Enter the **Hostname** and **Port**.
  1. Select the applicable **Security protocol**.
  1. Select the applicable **Referral**.
  1. Enter the **User DN** and **Bind Password** for your LDAP service account.
  1. Under the **Users** section, enter the **Search Base**.
  1. Under the **Users** section, you can also enter **Search Filter** (Optional).
  1. Under the **Users** section, you can select **Just in Time Provisioning**. If this option is enabled, users are created at login time. If this option is not enabled, users must be created before being able to log in.
  1. Under the **Groups** section, you can enter the **Search Base** (optional) and **Search Filter** (optional) to associate LDAP groups with your user. If you want to use the `memberOf` attribute on user objects, you can enter the value `memberOf` as the Search Base instead of an LDAP path for a group OU. Doing so causes the Search Filter value to be ignored.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider.
   The configurable attributes are sent to apps through OpenID tokens,
   along with any other stored user information issued by <%= vars.product_name %>.
  1. Select a **User Scheme Attribute** from the dropdown.
  1. Enter an **LDAP Attribute Name** with the corresponding attribute from LDAP.

	The only configurable attributes for LDAP are `given_name`, `family_name`, and `phone_number`.
        Configuring `email` and `external_groups` has no effect on your LDAP integration.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps through OpenID tokens issued by <%= vars.product_name %>.
  - Enter a **Custom Attribute Name**.
  - Enter an **LDAP Attribute Name** with the corresponding attribute from LDAP.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint.  Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

1. (Optional) Transfer group memberships and roles from an existing LDAP groups to <%= vars.product_name %> as follows:
  1. To map existing LDAP user group memberships to <%= vars.product_name %> resources,
     create a permissions mapping for your LDAP identity provider as described in
     [Create or Edit Resource Permissions Mapping](#create-resource-perm) below.
  1. To propagate the existing LDAP user group memberships into the `roles` claim of the OpenID tokens
     issued by <%= vars.product_name %>,
     follow the procedure in [Configure Group Whitelist for an External Identity Provider](#config-whitelist) below.

## <a id='delete-idp'></a> Delete an External Identity Provider

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of your external identity provider.

1. Click **Delete** at the bottom of the page.

1. In the pop-up that appears, click **Delete Identity Provider** to confirm that you want to delete the identity provider, along with all of its configurations.

<p class="note warning"><strong>Note:</strong> Deleting an external identity provider deletes all of its configurations, preventing users from authenticating through the external identity provider. This action cannot be undone.</p>

## <a id='config-whitelist'></a> Configure Group Whitelist for an External Identity Provider

An admin can include groups from an external identity provider in a group whitelist. The list of groups in the whitelist propagates in the ID token when a user authenticates through an external identity provider.

An app can retrieve from the ID token the list of external groups that the user belongs to. An admin can use these groups to assign permissions by group rather than by individual users.

For information about how to create resource permission mappings,
see <a href="#create-resource-perm">Create or Edit Resource Permissions Mapping</a> below.

<p class="note"><strong>Note:</strong> For an app to retrieve an ID token or a <code>/userinfo</code> response containing external groups, the app must request the <code>roles</code> claim and the group whitelist must include the external groups.</p>

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
   You can find these credentials in your Pivotal Application Service tile in Ops Manager under the Credentials tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of your external identity provider and select **Group Whitelist** from the dropdown.

1. Add a group name from your external identity provider. You can use a regex to add group names. For example, you can use `*` to refer to all groups.

1. Click **Save Group Whitelist**.

## <a id='create-resource-perm'></a> Create or Edit Resource Permissions Mapping

After a space developer defines resources required by an app,
an admin can map existing groups to those resources.
For information about how the space developer defines resources,
see [Create or Edit Resources](./manage-resources.html#create-resources).

After resource permissions mappings are configured and a user authenticates,
the user's group memberships are mapped to scopes in the resulting token.

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click the name of the external identity provider you want to define permissions for and select **Resource Permissions** from the dropdown.

1. Click **New Permissions Mapping**.

1. Enter a **Group Name**.
	- The **Group Name** values need to be fully qualified LDAP paths, following the format `cn=XXX-group,ou=users,o=YYY,dc=ZZZ,dc=com`.

1. Click **Select Permissions** to choose the permissions that users in the group should have access to.

1. Click **Save Permissions Mapping**.

<p class="note"><strong>Note:</strong> Groups with unsupported characters in Permission Mappings are not editable.</p>

<p class="note"><strong>Note:</strong> If you want to automate the above procedure, creating or editing resource permissions,
you can use the UAA API. For information about using <code>uaac group mappings</code> and <code>uaac group map</code>,
see <a href="https://docs.cloudfoundry.org/uaa/uaa-user-management.html#external-group">
Grant Admin Permissions to an External Group (SAML or LDAP)</a> in the Cloud Foundry documentation.
To do this automation, you need an identity zone admin client; for information,
see <a href="./configure-id-providers-api.html#creating">Create a UAA Identity Zone Admin Client</a>.</p>


## <a id='delete-resource-perm'></a> Delete Resource Permissions Mapping

1. Log in to the <%= vars.operator_dash %> at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of the external identity provider you want to delete permissions for and select **Resource Permissions** from the dropdown.

1. Click the group name of the resource permission you want to delete.

1. Click **Delete** at the bottom of the page.

1. On the pop-up, click **Delete Permissions Mapping** to delete the resource.

<p class="note"><strong>Note:</strong> Groups with unsupported characters in Permission Mappings are not editable.</p>

<p class="note"><strong>Note:</strong> If you want to automate the above procedure,
deleting resource permissions mappings, you can use the UAA API to un-map a group mapping.
See the <a href="http://docs.cloudfoundry.org/api/uaa/index.html#unmap">Cloud Foundry documentation</a> for more information.
To do this automation, you need an identity zone admin client. For more information,
see <a href="./configure-id-providers-api.html#creating">Create a UAA Identity Zone Admin Client</a>.</p>

## <a id='testing-identity-provider-configurations'></a> Test Identity Provider Configurations

Pivotal provides sample apps you can deploy to validate your identity provider configurations.
To deploy a sample app, see [identity-sample-apps](https://github.com/pivotal-cf/identity-sample-apps)
in Github.
